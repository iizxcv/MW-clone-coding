name: Notion Task → GitHub Issue + Branch + PR

on:
  schedule:
    - cron: "*/10 * * * *"   # 10분마다(UTC)
  workflow_dispatch:          # 수동 실행 버튼 제공

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq git

      - name: Configure GitHub user
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

      - name: Query Notion DB
        run: |
          curl -s -X POST "https://api.notion.com/v1/databases/${{ secrets.NOTION_DATABASE_ID }}/query" \
            -H "Authorization: Bearer ${{ secrets.NOTION_TOKEN }}" \
            -H "Notion-Version: 2022-06-28" \
            -H "Content-Type: application/json" \
            --data '{
              "filter": {
                "property": "Sync to GitHub",
                "checkbox": { "equals": true }
              }
            }' > notion.json
          jq '.results | length' notion.json

      - name: Process each Task
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          results=$(jq -c '.results[]' notion.json)
          if [ -z "$results" ]; then
            echo "No rows to sync."
            exit 0
          fi

          echo "$results" | while read -r row; do
            page_id=$(echo "$row" | jq -r '.id')
            title=$(echo "$row" | jq -r '.properties.Title.title[0].plain_text // "No title"')
            desc=$(echo "$row"  | jq -r '.properties.Description.rich_text[0].plain_text // ""')
            github_url=$(echo "$row" | jq -r '.properties["GitHub URL"].url // empty')

            if [ -n "$github_url" ] && [ "$github_url" != "null" ]; then
              echo "Already synced: $title"
              continue
            fi

            # 1️⃣ GitHub Issue 생성
            issue=$(curl -s -X POST \
              -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues \
              -d "$(jq -n --arg t "$title" --arg b "$desc" '{title:$t, body:$b}')")
            issue_url=$(echo "$issue" | jq -r '.html_url // empty')
            issue_number=$(echo "$issue" | jq -r '.number')

            if [ -z "$issue_url" ]; then
              echo "Failed to create issue: $title"
              continue
            fi
            echo "Created issue: $issue_url"

            # 2️⃣ 브랜치 생성 (feature/{issue-number}-{slug})
            slug=$(echo "$title" | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '-')  # 제목 -> URL-friendly
            branch_name="feature/${issue_number}-${slug}"
            git fetch origin main
            git checkout -b $branch_name

            # (Optional) 기본 README/파일 커밋 (빈 commit도 가능)
            git commit --allow-empty -m "Start branch for $title"

            git push -u origin $branch_name

            # 3️⃣ Pull Request 생성
            pr=$(curl -s -X POST \
              -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/pulls \
              -d "$(jq -n --arg t "$title" --arg b "$desc" --arg h "main" --arg br "$branch_name" '{title:$t, body:$b, head:$br, base:$h}')")
            pr_url=$(echo "$pr" | jq -r '.html_url // empty')

            echo "Created PR: $pr_url"

            # 4️⃣ Notion 페이지 업데이트
            curl -s -X PATCH "https://api.notion.com/v1/pages/$page_id" \
              -H "Authorization: Bearer ${{ secrets.NOTION_TOKEN }}" \
              -H "Notion-Version: 2022-06-28" \
              -H "Content-Type: application/json" \
              --data "$(jq -n \
                --arg issue "$issue_url" \
                --arg pr "$pr_url" \
                '{
                  properties: {
                    "GitHub URL": { "url": $issue },
                    "Pull Request URL": { "url": $pr },
                    "Sync to GitHub": { "checkbox": false }
                  }
                }')"
          done
